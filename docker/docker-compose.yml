version: '3.7'

x-backend-env:
  &backend-env
  PSQL_HOST_ANALYTICS: ${PSQL_HOST_ANALYTICS}
  PSQL_PORT_ANALYTICS: ${PSQL_PORT_ANALYTICS}
  PSQL_USER_ANALYTICS: ${PSQL_USER_ANALYTICS}
  PSQL_PASS_ANALYTICS: ${PSQL_PASS_ANALYTICS}
  PSQL_DB_ANALYTICS: ${PSQL_DB_ANALYTICS}
  APP_PORT_ANALYTICS: ${APP_PORT_ANALYTICS}
  PYTHONPATH: /var
  PSQL_HOST_MAIN: ${PSQL_HOST_MAIN}
  PSQL_PORT_MAIN: ${PSQL_PORT_MAIN}
  PSQL_USER_MAIN: ${PSQL_USER_MAIN}
  PSQL_PASS_MAIN: ${PSQL_PASS_MAIN}
  PSQL_DB_MAIN: ${PSQL_DB_MAIN}
  RABBITMQ_USER: ${MQ_USER}
  RABBITMQ_PASS: ${MQ_PASS}
  RABBITMQ_VHOST: ${MQ_VHOST}
  RABBITMQ_HOSTS: 'rabbitmq'


x-backend:
  &backend
  build:
    context: ../../
    dockerfile: analytics_service/docker/Dockerfile
  restart: on-failure
  tty: true
  volumes:
    - "../../analytics_service/app:/var/app"
  environment:
    <<: *backend-env


services:

  # ####################################################################################################################
  # Веб-сервисы (backend)
  # ####################################################################################################################
  backend:
    <<: *backend
    depends_on:
      - psql-analytics
    ports:
      - ${APP_PORT_ANALYTICS}:${APP_PORT_ANALYTICS}


  watcher_async_tasks:
    <<: *backend
    command: >
      bash -c "
      dockerize -wait tcp://rabbitmq:15672
      python /var/app/manage.py async_tasks"
    depends_on:
      - redis
      - rabbitmq

  rabbitmq:
    image: 'bitnami/rabbitmq:latest'
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - 'rabbitmqstats_data:/bitnami'
    environment:
      RABBITMQ_HOSTS: ${RABBITMQ_HOSTS}
      RABBITMQ_DEFAULT_USER: ${MQ_USER}
      RABBITMQ_DEFAULT_PASS: ${MQ_PASS}
      RABBITMQ_DEFAULT_VHOST: ${MQ_VHOST}

  redis:
    image: redis:alpine
    ports:
      - "6380:6379"
    volumes:
      - "redis_data:/var/lib/redis"

  psql-analytics:
    image: postgres:alpine
    ports:
      - "5441:5432"
    volumes:
      - "psql_data:/var/lib/postgresql/data"
    environment:
      POSTGRES_USER: ${PSQL_USER_ANALYTICS}
      POSTGRES_PASSWORD: ${PSQL_PASS_ANALYTICS}
      POSTGRES_DB: ${PSQL_DB_ANALYTICS}

volumes:
  psql_data: { }
  rabbitmqstats_data: { }
  redis_data: { }